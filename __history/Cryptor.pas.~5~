unit Cryptor;

interface
  function ChesarCrypt(input: string; offset: longint): string;
  function ChesarDecrypt(input: string; offset: longint): string;
implementation
  ///<summary>
  ///Шифрует строку методом Цезаря
  ///</summary>
  ///<param name="input">
  ///Входная строка
  ///</param>
  ///<param name="offset">
  ///Сдвиг при шифровании
  ///</param>
  ///<returns>
  ///Зашифрованная строка
  ///</returs>
  function ChesarCrypt(input: string; offset: longint): string;
  const
   NUM_Of_SYMBOLS = 65535;
  var
    output: string;
    counter, StrLen: integer;
  begin
    if offset >  NUM_OF_SYMBOLS then
      offset := offset mod 65535;

    StrLen := Length(input);

    for counter := 1 to StrLen do begin
      output := output + chr((ord(input[counter]) + offset) mod NUM_OF_SYMBOLS);
    end;

    ChesarCrypt := output
  end;
  ///<summary>
  ///Расшифровывает строку методом Цезаря
  ///</summary>
  ///<param name="input">
  ///Входная строка
  ///</param>
  ///<param name="offset">
  ///Сдвиг при шифровании
  ///</param>
  ///<returns>
  ///Расшифрованная строка
  ///</returs>
  function ChesarDecrypt(input: string; offset: longint): string;
  const
   NUM_Of_SYMBOLS = 65535;
  var
    output: string;
    counter, StrLen: integer;
  begin
    if offset >  NUM_OF_SYMBOLS then
      offset := offset mod 65535;

    StrLen := Length(input);

    for counter := 1 to StrLen do begin
      output := output + chr((ord(input[counter]) + NUM_OF_SYMBOLS - offset) mod NUM_OF_SYMBOLS);
    end;

    ChesarDerypt := output
  end;
end.
